// File: server/src/utils/main.ts
const parseBoolean = (value) => {
    if (!value)
        throw new Error('Missing required boolean environment variable!');
    const normalized = value.trim().toLowerCase();
    if (['true', 't', '1', 'yes', 'on'].includes(normalized))
        return true;
    if (['false', 'f', '0', 'no', 'off'].includes(normalized))
        return false;
    throw new Error(`Invalid boolean for environment variable! Value: "${value}"`);
};
const parseNumber = (value) => {
    if (!value)
        throw new Error('Missing required number environment variable!');
    const parsed = parseInt(value, 10);
    if (isNaN(parsed)) {
        throw new Error(`Invalid number for environment variable! Value: "${value}"`);
    }
    return parsed;
};
const parseString = (value, envVarName) => {
    if (!value)
        throw new Error(`Missing required environment variable: ${envVarName}`);
    return value;
};
export const utils = {
    parseBoolean,
    parseNumber,
    parseString
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlDQUFpQztBQUlqQyxNQUFNLFlBQVksR0FBRyxDQUFDLEtBQXlCLEVBQVcsRUFBRTtJQUMzRCxJQUFJLENBQUMsS0FBSztRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0RBQWdELENBQUMsQ0FBQztJQUM5RSxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7SUFFOUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDO1FBQUUsT0FBTyxJQUFJLENBQUM7SUFDdEUsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDO1FBQUUsT0FBTyxLQUFLLENBQUM7SUFFeEUsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsS0FBSyxHQUFHLENBQUMsQ0FBQztBQUNoRixDQUFDLENBQUM7QUFFRixNQUFNLFdBQVcsR0FBRyxDQUFDLEtBQXlCLEVBQVUsRUFBRTtJQUN6RCxJQUFJLENBQUMsS0FBSztRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsK0NBQStDLENBQUMsQ0FBQztJQUM3RSxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRW5DLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFDbkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUMvRSxDQUFDO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRixNQUFNLFdBQVcsR0FBRyxDQUFDLEtBQXlCLEVBQUUsVUFBa0IsRUFBVSxFQUFFO0lBQzdFLElBQUksQ0FBQyxLQUFLO1FBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQywwQ0FBMEMsVUFBVSxFQUFFLENBQUMsQ0FBQztJQUNwRixPQUFPLEtBQUssQ0FBQztBQUNkLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBYztJQUMvQixZQUFZO0lBQ1osV0FBVztJQUNYLFdBQVc7Q0FDWCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZTogc2VydmVyL3NyYy91dGlscy9tYWluLnRzXG5cbmltcG9ydCB7IFV0aWxpdGllcyB9IGZyb20gJy4uL3R5cGVzL2luZGV4LmpzJztcblxuY29uc3QgcGFyc2VCb29sZWFuID0gKHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBib29sZWFuID0+IHtcblx0aWYgKCF2YWx1ZSkgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIHJlcXVpcmVkIGJvb2xlYW4gZW52aXJvbm1lbnQgdmFyaWFibGUhJyk7XG5cdGNvbnN0IG5vcm1hbGl6ZWQgPSB2YWx1ZS50cmltKCkudG9Mb3dlckNhc2UoKTtcblxuXHRpZiAoWyd0cnVlJywgJ3QnLCAnMScsICd5ZXMnLCAnb24nXS5pbmNsdWRlcyhub3JtYWxpemVkKSkgcmV0dXJuIHRydWU7XG5cdGlmIChbJ2ZhbHNlJywgJ2YnLCAnMCcsICdubycsICdvZmYnXS5pbmNsdWRlcyhub3JtYWxpemVkKSkgcmV0dXJuIGZhbHNlO1xuXG5cdHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBib29sZWFuIGZvciBlbnZpcm9ubWVudCB2YXJpYWJsZSEgVmFsdWU6IFwiJHt2YWx1ZX1cImApO1xufTtcblxuY29uc3QgcGFyc2VOdW1iZXIgPSAodmFsdWU6IHN0cmluZyB8IHVuZGVmaW5lZCk6IG51bWJlciA9PiB7XG5cdGlmICghdmFsdWUpIHRocm93IG5ldyBFcnJvcignTWlzc2luZyByZXF1aXJlZCBudW1iZXIgZW52aXJvbm1lbnQgdmFyaWFibGUhJyk7XG5cdGNvbnN0IHBhcnNlZCA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG5cblx0aWYgKGlzTmFOKHBhcnNlZCkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbnVtYmVyIGZvciBlbnZpcm9ubWVudCB2YXJpYWJsZSEgVmFsdWU6IFwiJHt2YWx1ZX1cImApO1xuXHR9XG5cblx0cmV0dXJuIHBhcnNlZDtcbn07XG5cbmNvbnN0IHBhcnNlU3RyaW5nID0gKHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQsIGVudlZhck5hbWU6IHN0cmluZyk6IHN0cmluZyA9PiB7XG5cdGlmICghdmFsdWUpIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZTogJHtlbnZWYXJOYW1lfWApO1xuXHRyZXR1cm4gdmFsdWU7XG59O1xuXG5leHBvcnQgY29uc3QgdXRpbHM6IFV0aWxpdGllcyA9IHtcblx0cGFyc2VCb29sZWFuLFxuXHRwYXJzZU51bWJlcixcblx0cGFyc2VTdHJpbmdcbn07XG4iXX0=