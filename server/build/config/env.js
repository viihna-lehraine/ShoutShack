// File: server/src/config/env.ts
import fs from 'fs';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import path from 'path';
import { utils } from '../common/utils/main.js';
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const envPaths = [
    path.resolve(__dirname, '../../conf/.env'), // when running compiled JS from 'build/'
    path.resolve(__dirname, '../../../conf/.env'), // when running via ts-node from 'src/'
    path.resolve(process.cwd(), 'server/conf/.env') // absolute fallback
];
const ENV_PATH = envPaths.find(fs.existsSync);
if (ENV_PATH) {
    console.log(`Loading environment variables from ${ENV_PATH}`);
    dotenv.config({ path: ENV_PATH });
}
else {
    throw new Error(`The .env file could not be found in any of its expected locations!`);
}
export const env = {
    CPU_THRESHOLD: utils.parseNumber(process.env.CPU_THRESHOLD),
    CPU_LIMIT: utils.parseNumber(process.env.CPU_LIMIT),
    MEMORY_THRESHOLD: utils.parseNumber(process.env.MEMORY_THRESHOLD),
    MEMORY_LIMIT: utils.parseNumber(process.env.MEMORY_LIMIT),
    DISK_IO_THRESHOLD: utils.parseNumber(process.env.DISK_IO_THRESHOLD),
    DISK_IO_LIMIT: utils.parseNumber(process.env.DISK_IO_LIMIT),
    DISK_SPACE_THRESHOLD: utils.parseNumber(process.env.DISK_SPACE_THRESHOLD),
    NETWORK_THRESHOLD: utils.parseNumber(process.env.NETWORK_THRESHOLD),
    NETWORK_LIMIT: utils.parseNumber(process.env.NETWORK_LIMIT),
    MAX_CACHE_ENTRY_SIZE: utils.parseNumber(process.env.MAX_CACHE_ENTRY_SIZE),
    MAX_CACHE_SIZE: utils.parseNumber(process.env.MAX_CACHE_SIZE),
    PEPPER: utils.parseString(process.env.PEPPER, 'PEPPER'),
    JWT_SECRET: utils.parseString(process.env.JWT_SECRET, 'JWT_SECRET'),
    A2_MEMCOST: utils.parseNumber(process.env.A2_MEMCOST),
    A2_TIMECOST: utils.parseNumber(process.env.A2_TIMECOST),
    A2_PARALLELISM: utils.parseNumber(process.env.A2_PARALLELISM),
    ALLOW_UPLOADS: utils.parseBoolean(process.env.ALLOW_UPLOADS),
    LOG_LEVEL: utils.parseString(process.env.LOG_LEVEL, 'LOG_LEVEL'),
    POSTGRES_DB: utils.parseString(process.env.POSTGRES_DB, 'POSTGRES_DB'),
    POSTGRES_HOST: utils.parseString(process.env.POSTGRES_HOST, 'POSTGRES_HOST'),
    POSTGRES_PASSWORD: utils.parseString(process.env.POSTGRES_PASSWORD, 'POSTGRES_PASSWORD'),
    POSTGRES_PORT: utils.parseNumber(process.env.POSTGRES_PORT),
    POSTGRES_USER: utils.parseString(process.env.POSTGRES_USER, 'POSTGRES_USER'),
    SERVER_HOST: utils.parseString(process.env.SERVER_HOST, 'SERVER_HOST'),
    SERVER_PORT: utils.parseNumber(process.env.SERVER_PORT)
};
console.log('Loaded environment variables:', env);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW52LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy9lbnYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDO0FBR2pDLE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUNwQixPQUFPLE1BQU0sTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLEtBQUssQ0FBQztBQUNwQyxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWhELE1BQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2xELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFFM0MsTUFBTSxRQUFRLEdBQUc7SUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLENBQUMsRUFBRSx5Q0FBeUM7SUFDckYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsb0JBQW9CLENBQUMsRUFBRSx1Q0FBdUM7SUFDdEYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxvQkFBb0I7Q0FDcEUsQ0FBQztBQUVGLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRTlDLElBQUksUUFBUSxFQUFFLENBQUM7SUFDZCxPQUFPLENBQUMsR0FBRyxDQUFDLHNDQUFzQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUNuQyxDQUFDO0tBQU0sQ0FBQztJQUNQLE1BQU0sSUFBSSxLQUFLLENBQUMsb0VBQW9F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QVcsQ0FBQztDQUM5QyxDQUFDO0FBRVgsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRSxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGU6IHNlcnZlci9zcmMvY29uZmlnL2Vudi50c1xuXG5pbXBvcnQgeyBFbnZWYXJzIH0gZnJvbSAnLi4vdHlwZXMvaW5kZXguanMnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcbmltcG9ydCB7IGZpbGVVUkxUb1BhdGggfSBmcm9tICd1cmwnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyB1dGlscyB9IGZyb20gJy4uL2NvbW1vbi91dGlscy9tYWluLmpzJztcblxuY29uc3QgX19maWxlbmFtZSA9IGZpbGVVUkxUb1BhdGgoaW1wb3J0Lm1ldGEudXJsKTtcbmNvbnN0IF9fZGlybmFtZSA9IHBhdGguZGlybmFtZShfX2ZpbGVuYW1lKTtcblxuY29uc3QgZW52UGF0aHMgPSBbXG5cdHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLi8uLi9jb25mLy5lbnYnKSwgLy8gd2hlbiBydW5uaW5nIGNvbXBpbGVkIEpTIGZyb20gJ2J1aWxkLydcblx0cGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uLy4uL2NvbmYvLmVudicpLCAvLyB3aGVuIHJ1bm5pbmcgdmlhIHRzLW5vZGUgZnJvbSAnc3JjLydcblx0cGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksICdzZXJ2ZXIvY29uZi8uZW52JykgLy8gYWJzb2x1dGUgZmFsbGJhY2tcbl07XG5cbmNvbnN0IEVOVl9QQVRIID0gZW52UGF0aHMuZmluZChmcy5leGlzdHNTeW5jKTtcblxuaWYgKEVOVl9QQVRIKSB7XG5cdGNvbnNvbGUubG9nKGBMb2FkaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcyBmcm9tICR7RU5WX1BBVEh9YCk7XG5cdGRvdGVudi5jb25maWcoeyBwYXRoOiBFTlZfUEFUSCB9KTtcbn0gZWxzZSB7XG5cdHRocm93IG5ldyBFcnJvcihgVGhlIC5lbnYgZmlsZSBjb3VsZCBub3QgYmUgZm91bmQgaW4gYW55IG9mIGl0cyBleHBlY3RlZCBsb2NhdGlvbnMhYCk7XG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEVudlZhcnMgPSB7XG5cdENQVV9USFJFU0hPTEQ6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52LkNQVV9USFJFU0hPTEQpLFxuXHRDUFVfTElNSVQ6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52LkNQVV9MSU1JVCksXG5cdE1FTU9SWV9USFJFU0hPTEQ6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52Lk1FTU9SWV9USFJFU0hPTEQpLFxuXHRNRU1PUllfTElNSVQ6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52Lk1FTU9SWV9MSU1JVCksXG5cdERJU0tfSU9fVEhSRVNIT0xEOiB1dGlscy5wYXJzZU51bWJlcihwcm9jZXNzLmVudi5ESVNLX0lPX1RIUkVTSE9MRCksXG5cdERJU0tfSU9fTElNSVQ6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52LkRJU0tfSU9fTElNSVQpLFxuXHRESVNLX1NQQUNFX1RIUkVTSE9MRDogdXRpbHMucGFyc2VOdW1iZXIocHJvY2Vzcy5lbnYuRElTS19TUEFDRV9USFJFU0hPTEQpLFxuXHRORVRXT1JLX1RIUkVTSE9MRDogdXRpbHMucGFyc2VOdW1iZXIocHJvY2Vzcy5lbnYuTkVUV09SS19USFJFU0hPTEQpLFxuXHRORVRXT1JLX0xJTUlUOiB1dGlscy5wYXJzZU51bWJlcihwcm9jZXNzLmVudi5ORVRXT1JLX0xJTUlUKSxcblx0TUFYX0NBQ0hFX0VOVFJZX1NJWkU6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52Lk1BWF9DQUNIRV9FTlRSWV9TSVpFKSxcblx0TUFYX0NBQ0hFX1NJWkU6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52Lk1BWF9DQUNIRV9TSVpFKSxcblxuXHRQRVBQRVI6IHV0aWxzLnBhcnNlU3RyaW5nKHByb2Nlc3MuZW52LlBFUFBFUiwgJ1BFUFBFUicpLFxuXHRKV1RfU0VDUkVUOiB1dGlscy5wYXJzZVN0cmluZyhwcm9jZXNzLmVudi5KV1RfU0VDUkVULCAnSldUX1NFQ1JFVCcpLFxuXHRBMl9NRU1DT1NUOiB1dGlscy5wYXJzZU51bWJlcihwcm9jZXNzLmVudi5BMl9NRU1DT1NUKSxcblx0QTJfVElNRUNPU1Q6IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52LkEyX1RJTUVDT1NUKSxcblx0QTJfUEFSQUxMRUxJU006IHV0aWxzLnBhcnNlTnVtYmVyKHByb2Nlc3MuZW52LkEyX1BBUkFMTEVMSVNNKSxcblxuXHRBTExPV19VUExPQURTOiB1dGlscy5wYXJzZUJvb2xlYW4ocHJvY2Vzcy5lbnYuQUxMT1dfVVBMT0FEUyksXG5cblx0TE9HX0xFVkVMOiB1dGlscy5wYXJzZVN0cmluZyhwcm9jZXNzLmVudi5MT0dfTEVWRUwsICdMT0dfTEVWRUwnKSxcblxuXHRQT1NUR1JFU19EQjogdXRpbHMucGFyc2VTdHJpbmcocHJvY2Vzcy5lbnYuUE9TVEdSRVNfREIsICdQT1NUR1JFU19EQicpLFxuXHRQT1NUR1JFU19IT1NUOiB1dGlscy5wYXJzZVN0cmluZyhwcm9jZXNzLmVudi5QT1NUR1JFU19IT1NULCAnUE9TVEdSRVNfSE9TVCcpLFxuXHRQT1NUR1JFU19QQVNTV09SRDogdXRpbHMucGFyc2VTdHJpbmcocHJvY2Vzcy5lbnYuUE9TVEdSRVNfUEFTU1dPUkQsICdQT1NUR1JFU19QQVNTV09SRCcpLFxuXHRQT1NUR1JFU19QT1JUOiB1dGlscy5wYXJzZU51bWJlcihwcm9jZXNzLmVudi5QT1NUR1JFU19QT1JUKSxcblx0UE9TVEdSRVNfVVNFUjogdXRpbHMucGFyc2VTdHJpbmcocHJvY2Vzcy5lbnYuUE9TVEdSRVNfVVNFUiwgJ1BPU1RHUkVTX1VTRVInKSxcblxuXHRTRVJWRVJfSE9TVDogdXRpbHMucGFyc2VTdHJpbmcocHJvY2Vzcy5lbnYuU0VSVkVSX0hPU1QsICdTRVJWRVJfSE9TVCcpLFxuXHRTRVJWRVJfUE9SVDogdXRpbHMucGFyc2VOdW1iZXIocHJvY2Vzcy5lbnYuU0VSVkVSX1BPUlQpXG59IGFzIGNvbnN0O1xuXG5jb25zb2xlLmxvZygnTG9hZGVkIGVudmlyb25tZW50IHZhcmlhYmxlczonLCBlbnYpO1xuIl19