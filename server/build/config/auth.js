// File: server/config/auth.ts
import argon2 from 'argon2';
import { env } from './env.js';
export const registerAuth = (app) => {
    app.register(import('@fastify/jwt'), {
        secret: process.env.JWT_SECRET
    });
    app.decorate('hashPassword', async (password) => {
        return await argon2.hash(password + env.PEPPER, {
            type: argon2.argon2id,
            memoryCost: env.A2_MEMCOST,
            timeCost: env.A2_TIMECOST,
            parallelism: env.A2_PARALLELISM
        });
    });
    app.decorate('authenticate', async (request, reply) => {
        try {
            await request.jwtVerify();
        }
        catch (err) {
            reply.code(401).send({ error: 'Unauthorized' });
        }
    });
    console.log('Authentication middleware registered');
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWcvYXV0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4QkFBOEI7QUFFOUIsT0FBTyxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBQzVCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFHL0IsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsR0FBb0IsRUFBRSxFQUFFO0lBQ3BELEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1FBQ3BDLE1BQU0sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVc7S0FDL0IsQ0FBQyxDQUFDO0lBRUgsR0FBRyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsS0FBSyxFQUFFLFFBQWdCLEVBQUUsRUFBRTtRQUN2RCxPQUFPLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRTtZQUMvQyxJQUFJLEVBQUUsTUFBTSxDQUFDLFFBQVE7WUFDckIsVUFBVSxFQUFFLEdBQUcsQ0FBQyxVQUFVO1lBQzFCLFFBQVEsRUFBRSxHQUFHLENBQUMsV0FBVztZQUN6QixXQUFXLEVBQUUsR0FBRyxDQUFDLGNBQWM7U0FDL0IsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7SUFFSCxHQUFHLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBdUIsRUFBRSxLQUFtQixFQUFFLEVBQUU7UUFDbkYsSUFBSSxDQUFDO1lBQ0osTUFBTSxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDM0IsQ0FBQztRQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7WUFDZCxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQ2pELENBQUM7SUFDRixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzZXJ2ZXIvY29uZmlnL2F1dGgudHNcblxuaW1wb3J0IGFyZ29uMiBmcm9tICdhcmdvbjInO1xuaW1wb3J0IHsgZW52IH0gZnJvbSAnLi9lbnYuanMnO1xuaW1wb3J0IHsgRmFzdGlmeUluc3RhbmNlLCBGYXN0aWZ5UmVxdWVzdCwgRmFzdGlmeVJlcGx5IH0gZnJvbSAnZmFzdGlmeSc7XG5cbmV4cG9ydCBjb25zdCByZWdpc3RlckF1dGggPSAoYXBwOiBGYXN0aWZ5SW5zdGFuY2UpID0+IHtcblx0YXBwLnJlZ2lzdGVyKGltcG9ydCgnQGZhc3RpZnkvand0JyksIHtcblx0XHRzZWNyZXQ6IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQhXG5cdH0pO1xuXG5cdGFwcC5kZWNvcmF0ZSgnaGFzaFBhc3N3b3JkJywgYXN5bmMgKHBhc3N3b3JkOiBzdHJpbmcpID0+IHtcblx0XHRyZXR1cm4gYXdhaXQgYXJnb24yLmhhc2gocGFzc3dvcmQgKyBlbnYuUEVQUEVSLCB7XG5cdFx0XHR0eXBlOiBhcmdvbjIuYXJnb24yaWQsXG5cdFx0XHRtZW1vcnlDb3N0OiBlbnYuQTJfTUVNQ09TVCxcblx0XHRcdHRpbWVDb3N0OiBlbnYuQTJfVElNRUNPU1QsXG5cdFx0XHRwYXJhbGxlbGlzbTogZW52LkEyX1BBUkFMTEVMSVNNXG5cdFx0fSk7XG5cdH0pO1xuXG5cdGFwcC5kZWNvcmF0ZSgnYXV0aGVudGljYXRlJywgYXN5bmMgKHJlcXVlc3Q6IEZhc3RpZnlSZXF1ZXN0LCByZXBseTogRmFzdGlmeVJlcGx5KSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdGF3YWl0IHJlcXVlc3Quand0VmVyaWZ5KCk7XG5cdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRyZXBseS5jb2RlKDQwMSkuc2VuZCh7IGVycm9yOiAnVW5hdXRob3JpemVkJyB9KTtcblx0XHR9XG5cdH0pO1xuXG5cdGNvbnNvbGUubG9nKCdBdXRoZW50aWNhdGlvbiBtaWRkbGV3YXJlIHJlZ2lzdGVyZWQnKTtcbn07XG4iXX0=