import fs from 'fs/promises';
import { client } from '../../db/main.js';
export async function healthRoutes(fastify) {
    fastify.get('/health/db', async (_, reply) => {
        try {
            await client.query('SELECT 1');
            console.log('Database connection is healthy.');
            const backups = await fs.readdir('/db/backups');
            reply.send({
                status: 'ok',
                db: 'connected',
                backups: backups.length > 0 ? 'present' : 'missing'
            });
        }
        catch (err) {
            console.error('Database health check failed:', err);
            reply.status(500).send({
                status: 'error',
                message: err instanceof Error ? err.message : err
            });
        }
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhbHRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9hcGkvaGVhbHRoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUM3QixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFMUMsTUFBTSxDQUFDLEtBQUssVUFBVSxZQUFZLENBQUMsT0FBd0I7SUFDMUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxLQUFtQixFQUFFLEVBQUU7UUFDMUQsSUFBSSxDQUFDO1lBQ0osTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUNBQWlDLENBQUMsQ0FBQztZQUUvQyxNQUFNLE9BQU8sR0FBRyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDaEQsS0FBSyxDQUFDLElBQUksQ0FBQztnQkFDVixNQUFNLEVBQUUsSUFBSTtnQkFDWixFQUFFLEVBQUUsV0FBVztnQkFDZixPQUFPLEVBQUUsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUzthQUNuRCxDQUFDLENBQUM7UUFDSixDQUFDO1FBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztZQUNkLE9BQU8sQ0FBQyxLQUFLLENBQUMsK0JBQStCLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDcEQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3RCLE1BQU0sRUFBRSxPQUFPO2dCQUNmLE9BQU8sRUFBRSxHQUFHLFlBQVksS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHO2FBQ2pELENBQUMsQ0FBQztRQUNKLENBQUM7SUFDRixDQUFDLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGYXN0aWZ5SW5zdGFuY2UsIEZhc3RpZnlSZXBseSB9IGZyb20gJ2Zhc3RpZnknO1xuaW1wb3J0IGZzIGZyb20gJ2ZzL3Byb21pc2VzJztcbmltcG9ydCB7IGNsaWVudCB9IGZyb20gJy4uLy4uL2RiL21haW4uanMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGVhbHRoUm91dGVzKGZhc3RpZnk6IEZhc3RpZnlJbnN0YW5jZSkge1xuXHRmYXN0aWZ5LmdldCgnL2hlYWx0aC9kYicsIGFzeW5jIChfLCByZXBseTogRmFzdGlmeVJlcGx5KSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdGF3YWl0IGNsaWVudC5xdWVyeSgnU0VMRUNUIDEnKTtcblx0XHRcdGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0aW9uIGlzIGhlYWx0aHkuJyk7XG5cblx0XHRcdGNvbnN0IGJhY2t1cHMgPSBhd2FpdCBmcy5yZWFkZGlyKCcvZGIvYmFja3VwcycpO1xuXHRcdFx0cmVwbHkuc2VuZCh7XG5cdFx0XHRcdHN0YXR1czogJ29rJyxcblx0XHRcdFx0ZGI6ICdjb25uZWN0ZWQnLFxuXHRcdFx0XHRiYWNrdXBzOiBiYWNrdXBzLmxlbmd0aCA+IDAgPyAncHJlc2VudCcgOiAnbWlzc2luZydcblx0XHRcdH0pO1xuXHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0Y29uc29sZS5lcnJvcignRGF0YWJhc2UgaGVhbHRoIGNoZWNrIGZhaWxlZDonLCBlcnIpO1xuXHRcdFx0cmVwbHkuc3RhdHVzKDUwMCkuc2VuZCh7XG5cdFx0XHRcdHN0YXR1czogJ2Vycm9yJyxcblx0XHRcdFx0bWVzc2FnZTogZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IGVyclxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9KTtcbn1cbiJdfQ==