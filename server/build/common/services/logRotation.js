import cron from 'node-cron';
import fs from 'fs-extra';
import path from 'path';
const LOG_DIR = './logs/';
const ARCHIVE_DIR = './logs/archive/';
const RETENTION_DAYS = 7;
fs.ensureDirSync(ARCHIVE_DIR);
cron.schedule('0 0 * * *', async () => {
    try {
        console.log('📝 Running Log Rotation Task...');
        const files = await fs.readdir(LOG_DIR);
        for (const file of files) {
            const filePath = path.join(LOG_DIR, file);
            const stats = await fs.stat(filePath);
            const fileAge = (Date.now() - stats.mtimeMs) / (1000 * 60 * 60 * 24);
            if (fileAge > RETENTION_DAYS) {
                await fs.move(filePath, path.join(ARCHIVE_DIR, file));
                console.log(`📂 Archived: ${file}`);
            }
        }
    }
    catch (err) {
        console.error('Log Rotation Error:', err);
    }
});
console.log('✅ Log Rotation Job Scheduled (Runs Daily at Midnight)');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nUm90YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL3NlcnZpY2VzL2xvZ1JvdGF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sSUFBSSxNQUFNLFdBQVcsQ0FBQztBQUM3QixPQUFPLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDMUIsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRXhCLE1BQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQztBQUMxQixNQUFNLFdBQVcsR0FBRyxpQkFBaUIsQ0FBQztBQUN0QyxNQUFNLGNBQWMsR0FBRyxDQUFDLENBQUM7QUFFekIsRUFBRSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUU5QixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxLQUFLLElBQUksRUFBRTtJQUNyQyxJQUFJLENBQUM7UUFDSixPQUFPLENBQUMsR0FBRyxDQUFDLGlDQUFpQyxDQUFDLENBQUM7UUFFL0MsTUFBTSxLQUFLLEdBQUcsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXhDLEtBQUssTUFBTSxJQUFJLElBQUksS0FBSyxFQUFFLENBQUM7WUFDMUIsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDMUMsTUFBTSxLQUFLLEdBQUcsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3RDLE1BQU0sT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBRXJFLElBQUksT0FBTyxHQUFHLGNBQWMsRUFBRSxDQUFDO2dCQUM5QixNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLElBQUksRUFBRSxDQUFDLENBQUM7WUFDckMsQ0FBQztRQUNGLENBQUM7SUFDRixDQUFDO0lBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNkLE9BQU8sQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDM0MsQ0FBQztBQUNGLENBQUMsQ0FBQyxDQUFDO0FBRUgsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1REFBdUQsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyb24gZnJvbSAnbm9kZS1jcm9uJztcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuY29uc3QgTE9HX0RJUiA9ICcuL2xvZ3MvJztcbmNvbnN0IEFSQ0hJVkVfRElSID0gJy4vbG9ncy9hcmNoaXZlLyc7XG5jb25zdCBSRVRFTlRJT05fREFZUyA9IDc7XG5cbmZzLmVuc3VyZURpclN5bmMoQVJDSElWRV9ESVIpO1xuXG5jcm9uLnNjaGVkdWxlKCcwIDAgKiAqIConLCBhc3luYyAoKSA9PiB7XG5cdHRyeSB7XG5cdFx0Y29uc29sZS5sb2coJ/Cfk50gUnVubmluZyBMb2cgUm90YXRpb24gVGFzay4uLicpO1xuXG5cdFx0Y29uc3QgZmlsZXMgPSBhd2FpdCBmcy5yZWFkZGlyKExPR19ESVIpO1xuXG5cdFx0Zm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XG5cdFx0XHRjb25zdCBmaWxlUGF0aCA9IHBhdGguam9pbihMT0dfRElSLCBmaWxlKTtcblx0XHRcdGNvbnN0IHN0YXRzID0gYXdhaXQgZnMuc3RhdChmaWxlUGF0aCk7XG5cdFx0XHRjb25zdCBmaWxlQWdlID0gKERhdGUubm93KCkgLSBzdGF0cy5tdGltZU1zKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KTtcblxuXHRcdFx0aWYgKGZpbGVBZ2UgPiBSRVRFTlRJT05fREFZUykge1xuXHRcdFx0XHRhd2FpdCBmcy5tb3ZlKGZpbGVQYXRoLCBwYXRoLmpvaW4oQVJDSElWRV9ESVIsIGZpbGUpKTtcblx0XHRcdFx0Y29uc29sZS5sb2coYPCfk4IgQXJjaGl2ZWQ6ICR7ZmlsZX1gKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdGNvbnNvbGUuZXJyb3IoJ0xvZyBSb3RhdGlvbiBFcnJvcjonLCBlcnIpO1xuXHR9XG59KTtcblxuY29uc29sZS5sb2coJ+KchSBMb2cgUm90YXRpb24gSm9iIFNjaGVkdWxlZCAoUnVucyBEYWlseSBhdCBNaWRuaWdodCknKTtcbiJdfQ==